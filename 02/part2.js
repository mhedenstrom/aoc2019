// [3]: 3 -> 152 -> 153 -> 2 -> 2 -> 2 -> ...

intcode = [
    1,0,0,3, // 1,0,0,[3] <=== [3]
    1,1,2,3, // add (verb + noun) => [3]
    1,3,4,3, // (verb + noun) + 1 => [3]
    1,5,0,3, // 2 => [3], [3] is done
    //-------
    2,6,1,19, // 2(6) * noun(2) => 112
    //-------
    1,5,19,23, // 
    2,6,23,27,
    1,27,5,31,
    2,9,31,35,
    1,5,35,39,
    2,6,39,43,
    2,6,43,47,
    1,5,47,51,
    2,9,51,55,
    1,5,55,59,
    1,10,59,63,
    1,63,6,67,
    1,9,67,71,
    1,71,6,75,
    1,75,13,79,
    2,79,13,83,
    2,9,83,87,
    1,87,5,91,
    1,9,91,95,
    2,10,95,99,
    1,5,99,103,
    1,103,9,107,
    1,13,107,111,
    2,111,10,115,
    1,115,5,119,
    2,13,119,123,
    1,9,123,127,
    1,5,127,131,
    2,131,6,135,
    1,135,5,139,
    1,139,6,143,
    1,143,6,147,
    1,2,147,151,
    1,151,5,0, // <=== store at [0]
    99] //,2,14,0,
    //0]

/*

=> store to 4n-1

  "save to X"
  "mul X "

*/


// 690720 / 345600 = 56 + 
// 353600

// 56 * 345600 = 19 353 600
//               19 690 720
// ------------------------
//                  337 120


// 345600x + V + 337024

// n = 337 024
const noun = 0  // 56   + 345600*n
const verb = 0// 96 +1

intcode[1] = noun
intcode[2] = verb

for (var i = 0; i < intcode.length; i+=4) {
    [opcode, a, b, x] = intcode.slice(i, i+4)

    if (opcode == 99)
        break
    else if (opcode == 1)
        intcode[x] = intcode[a] + intcode[b]
    else if (opcode == 2)
        intcode[x] = intcode[a] * intcode[b]


    // console.log(intcode[x])
}

console.log(intcode[0])
console.log(`100 * ${noun} + ${verb} = ${100*noun+verb}`)



/*
3
152
153
2
112 <======
113 +1
226 *2
227 +1
681 *3
682 +1
1364 *2
2728 *2
2729 +1
8187 * 3
8188 +1
8192 +4
8194 +2
8197 +3
8199 +2
8204 +5
41020 *5
123060 *3
123061 +1
123064 +3
492256 *4
492257 +1
492260 +3
492265 +5
1969060 *4
1969061 +1
9845305 *5
9845308 +3
9845309 +1
19690618 *2
19690619 +1
19690621 +2
19690623 +2
19690719 -4
19690720 +1

*/